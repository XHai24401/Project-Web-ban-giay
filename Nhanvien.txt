public class NhanVienController : Controller
    {
        private SneakerEntities db = new SneakerEntities();
        // GET: Admin/NhanVien
        public ActionResult Index(int page = 1, int pagesize = 10)
        {
            var model = db.NHANVIENs.Where(x => x.TaiKhoan != "admin").OrderByDescending(x => x.MaNV);
            return View(model.ToPagedList(page, pagesize));
        }

        public JsonResult TrangThai(int ID)
        {
            var cn = db.NHANVIENs.Find(ID);
            if (cn.TrangThai == true)
                cn.TrangThai = false;
            else
                cn.TrangThai = true;

            db.SaveChanges();
            return Json(new
            {
                status = true
            });
        }

        public JsonResult Delete(int ID)
        {

            try
            {
                var model = db.NHANVIENs.Find(ID);
                db.NHANVIENs.Remove(model);
                db.SaveChanges();
                return Json(new
                {
                    status = true
                });
            }
            catch
            {
                return Json(new
                {
                    status = false
                });
            }

        }


        [HttpPost]
        public ActionResult frmAdd(NHANVIEN entity)
        {
            try
            {
                var nv = new NHANVIEN();
                nv.TaiKhoan = entity.TaiKhoan;
                nv.MatKhau = entity.MatKhau;
                nv.DiaChi = entity.DiaChi;
                nv.TenNV = entity.TenNV;
                nv.Email = entity.Email;
                nv.Sdt = entity.Sdt;
                nv.GioiTinh = entity.GioiTinh;
                nv.NgaySinh = entity.NgaySinh;
                nv.TrangThai = true;

                db.NHANVIENs.Add(nv);
                db.SaveChanges();


                TempData["message"] = "Thêm tài khoản thành công";
                return Redirect("/admin/nhanvien/index");

            }
            catch
            {
                TempData["message"] = "Thêm tài khoản KHÔNG thành công";
                return Redirect("/admin/nhanvien/index");
            }
        }


        [HttpPost]
        public ActionResult frmEdit(NHANVIEN entity)
        {
            try
            {
                var nv = db.NHANVIENs.Find(entity.MaNV);
                
                nv.DiaChi = entity.DiaChi;
                nv.TenNV = entity.TenNV;
                nv.Email = entity.Email;
                nv.Sdt = entity.Sdt;
                nv.GioiTinh = entity.GioiTinh;
                nv.NgaySinh = entity.NgaySinh;

                db.SaveChanges();
                TempData["message"] = "Cập nhật tài khoản thành công";
                return Redirect("/admin/nhanvien/index");
            }
            catch
            {
                TempData["message"] = "Cập nhật tài khoản KHÔNG thành công";
                return Redirect("/admin/nhanvien/index");
            }
        }

        public JsonResult GetByID(int ID)
        {
            db.Configuration.ProxyCreationEnabled = false;
            var model = db.NHANVIENs.Find(ID);

            var query = new
            {
                Sdt = model.Sdt,
                TenNV = model.TenNV,
                DiaChi = model.DiaChi,
                Email = model.Email,
                GioiTinh = model.GioiTinh,
                NgaySinh = model.NgaySinh.Value.ToString("yyyy-MM-dd")
            };
            return Json(query, JsonRequestBehavior.AllowGet);
        }
    }

--> Phần view


@using PagedList.Mvc;
@using Sneaker.Models.EF;
@{
    ViewBag.Title = "Quản lý nhân viên";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    int dem = 1;
}
@model PagedList.IPagedList<NHANVIEN>

<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <h1>
            Danh sách nhân viên
        </h1>
        <ol class="breadcrumb">
            <li><a href="/"><i class="fa fa-dashboard"></i>Trang chủ</a></li>
            <li><a href="/nhanvien/index">Quản lý nhân viên</a></li>
            <li class="active">Danh sách nhân viên</li>
        </ol>
    </section>

    <!-- Main content -->
    <section class="content">
        <div class="row">
            @if (TempData["message"] != null)
            {
                <div class="alert alert-success text-center" id="AlertBox">
                    @TempData["message"]
                </div>
            }
        </div>
        <div class="row">
            <div class="col-md-4" style="margin-bottom: 10px">
                <button class="btn btn-lg btn-primary" data-toggle="modal" data-target="#add">Thêm mới </button>
            </div>
        </div>
        <!-- Modal -->
        <div class="modal fade" id="add" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title text-center text-uppercase" id="exampleModalLabel">Thêm mới nhân viên</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        @using (Html.BeginForm("frmAdd", "NhanVien", FormMethod.Post, new { enctype = "multipart/form-data", id = "frmAdd" }))
                        {
                            <div class="form-group col-sm-12">
                                <label for="recipient-name" class="col-form-label">Tên nhân viên:</label>
                                <input type="text" name="TenNV" class="form-control" required>
                            </div>
                            <div class="form-group col-sm-6">
                                <label for="recipient-name" class="col-form-label">Tên đăng nhập:</label>
                                <input type="text" name="TaiKhoan" class="form-control" required>
                            </div>
                            <div class="form-group col-sm-6">
                                <label for="recipient-name" class="col-form-label">Mật khẩu:</label>
                                <input type="password" name="MatKhau" class="form-control" required>
                            </div>
                            <div class="form-group col-sm-6">
                                <label for="recipient-name" class="col-form-label">Giới tính:</label>
                                <select class="form-control" name="GioiTinh">
                                    <option value="Nam">---Nam---</option>
                                    <option value="Nữ">---Nữ---</option>
                                </select>
                            </div>
                            <div class="form-group col-sm-6">
                                <label for="recipient-name" class="col-form-label">Ngày sinh:</label>
                                <input type="date" name="NgaySinh" class="form-control" required>
                            </div>

                            <div class="form-group col-sm-6">
                                <label for="recipient-name" class="col-form-label">Số điện thoại:</label>
                                <input type="text" name="Sdt" class="form-control" required>
                            </div>
                            <div class="form-group col-sm-6">
                                <label for="recipient-name" class="col-form-label">Email:</label>
                                <input type="text" name="Email" class="form-control" required>
                            </div>
                            <div class="form-group col-sm-12">
                                <label for="recipient-name" class="col-form-label">Địa chỉ:</label>
                                <input type="text" name="DiaChi" class="form-control" required>
                            </div>
                            <div class="form-group text-center">
                                <button type="submit" class="btn btn-primary btn-lg">Thêm mới</button>
                            </div>
                        }
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-xs-12">
                <div class="box">
                    <div class="box-header">
                        <h3 class="box-title"></h3>
                    </div><!-- /.box-header -->
                    <div class="box-body">
                        <table id="tblData" class="table table-bordered table-hover">
                            <thead>
                                <tr>
                                    <th class="text-center">#</th>
                                    <th class="text-center">Tên nhân viên</th>
                                    <th class="text-center">Thông tin</th>
                                    <th class="text-center">Trạng thái</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {

                                    <tr>
                                        <td class="text-center">@dem</td>
                                        <td class="text-center">@item.TenNV</td>
                                        <td>
                                            <p>Giới tính: <b>@item.GioiTinh</b> &ensp; Số ĐT: <b>@item.Sdt</b></p>
                                            <p>Địa chỉ: <b>@item.DiaChi</b>&ensp; Email: <b>@item.Email</b></p>
                                            <p>Ngày sinh: <b>@item.NgaySinh.Value.ToString("dd/MM/yyyy")</b></p>
                                        </td>
                                        <td class="text-center">
                                            @if (item.TrangThai == true)
                                            {
                                                <button class="btn btn-primary btnStatus" data-id="@item.MaNV">Đang hoạt động</button>
                                            }
                                            else
                                            {
                                                <button class="btn btn-default btnStatus" data-id="@item.MaNV">Đã khóa</button>
                                            }

                                        </td>
                                        <td>
                                            <button class="btn btn-default btnEdit" data-id="@item.MaNV" title="Cập nhật nhân viên"><i class="fa fa-edit"></i></button>
                                            <button class="btn btn-danger btnDelete" data-id="@item.MaNV" title="Xóa nhân viên"><i class="fa fa-remove"></i></button>
                                        </td>
                                    </tr>
                                    dem++;
                                }

                            </tbody>

                        </table>
                        <div class="box-footer">
                            <div class="pull-left">
                                Trang @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) / @Model.PageCount
                            </div>
                            <div class="pull-right">
                                @Html.PagedListPager(Model, page => Url.Action("DonHang", new { ID = ViewBag.MaKH, page }))
                            </div>
                        </div>
                    </div><!-- /.box-body -->
                </div><!-- /.box -->

            </div><!-- /.col -->
        </div><!-- /.row -->
    </section><!-- /.content -->
</div>
<!-- Modal -->
<div class="modal fade edit" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title text-center text-uppercase" id="exampleModalLabel">Cập nhật nhân viên</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("frmEdit", "NhanVien", FormMethod.Post, new { enctype = "multipart/form-data", id = "frmEdit" }))
                {
                    <input type="hidden" name="MaNV" id="MaNV" />
                    <div class="form-group col-sm-12">
                        <label for="recipient-name" class="col-form-label">Tên nhân viên:</label>
                        <input type="text" name="TenNV" id="TenNV" class="form-control" required>
                    </div>
                    <div class="form-group col-sm-6">
                        <label for="recipient-name" class="col-form-label">Giới tính:</label>
                        <select class="form-control" name="GioiTinh" id="GioiTinh">
                            <option value="Nam">---Nam---</option>
                            <option value="Nữ">---Nữ---</option>
                        </select>
                    </div>
                    <div class="form-group col-sm-6">
                        <label for="recipient-name" class="col-form-label">Ngày sinh:</label>
                        <input type="date" name="NgaySinh" id="NgaySinh" class="form-control" required>
                    </div>

                    <div class="form-group col-sm-6">
                        <label for="recipient-name" class="col-form-label">Số điện thoại:</label>
                        <input type="text" name="Sdt" id="Sdt" class="form-control" required>
                    </div>
                    <div class="form-group col-sm-6">
                        <label for="recipient-name" class="col-form-label">Email:</label>
                        <input type="text" name="Email" id="Email" class="form-control" required>
                    </div>
                    <div class="form-group col-sm-12">
                        <label for="recipient-name" class="col-form-label">Địa chỉ:</label>
                        <input type="text" name="DiaChi" id="DiaChi" class="form-control" required>
                    </div>
                    <div class="form-group text-center">
                        <button type="submit" class="btn btn-primary">Cập nhật</button>
                    </div>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
            </div>
        </div>
    </div>
</div>

@section jsSection{

    <script>
        $(function () {
            //nếu không có thao tác gì thì ẩn đi
            $('#AlertBox').removeClass('hide');

            //Sau khi hiển thị lên thì delay 1s và cuộn lên trên sử dụng slideup
            $('#AlertBox').delay(2000).slideUp(500);

            $.validator.addMethod("select_validate", function (value, element, arg) {
                return arg !== value;
            }, "Value must not equal arg.");

             jQuery.validator.addMethod("phonenu", function (value, element) {
                if (/^(09[0-9]|07[0|6|7|8|9]|03[2-9]|08[1-5])+([0-9]{7})\b/g.test(value)) {
                    return true;
                } else {
                    return false;
                };
             }, "Invalid phone number");

             jQuery.validator.addMethod("email_regex", function (value, element) {
                if (/^[a-z][a-z0-9_\.]{5,32}@@[a-z0-9]{2,}(\.[a-z0-9]{2,4}){1,2}$/g.test(value)) {
                    return true;
                } else {
                    return false;
                };
            }, "Invalid email");

            //Khi bàn phím được nhấn và thả ra thì sẽ chạy phương thức này
            $("#frmAdd").validate({
                rules: {
                    TenNV: "required",
                    DiaChi: "required",
                    TaiKhoan: "required",
                    MatKhau: "required",
                    NgaySinh: "required",
                    Sdt: {
                        required: true,
                        phonenu: true
                    },
                    Email: {
                        required: true,
                        email_regex: true
                    }
                },
                messages: {
                    TenNV: "Vui lòng nhập tên nhân viên",
                    DiaChi: "Vui lòng nhập địa chỉ",
                    TaiKhoan: "Vui lòng nhập tên đăng nhập",
                    MatKhau: "Vui lòng nhập mật khẩu",
                    NgaySinh: "Vui lòng nhập ngày sinh",
                    Sdt: {
                        required: "Vui lòng nhập số điện thoại",
                        phonenu: "Số điện thoại không hợp lệ"
                    },
                    Email: {
                        required: "Vui lòng nhập email",
                        email_regex: "Email không hợp lệ"
                    }
                }
            });

            $("#frmEdit").validate({
                rules: {
                    TenNV: "required",
                    DiaChi: "required",
                    NgaySinh: "required",
                    Sdt: {
                        required: true,
                        phonenu: true
                    },
                    Email: {
                        required: true,
                        email_regex: true
                    }
                },
                messages: {
                    TenNV: "Vui lòng nhập tên nhân viên",
                    DiaChi: "Vui lòng nhập địa chỉ",
                    NgaySinh: "Vui lòng nhập ngày sinh",
                    Sdt: {
                        required: "Vui lòng nhập số điện thoại",
                        phonenu: "Số điện thoại không hợp lệ"
                    },
                    Email: {
                        required: "Vui lòng nhập email",
                        email_regex: "Email không hợp lệ"
                    }
                }
            });

            $('.btnDelete').off('click').on('click', function () {

                const notice = PNotify.notice({
                    title: 'Thông báo',
                    text: 'Bạn thật sự muốn xóa?',
                    icon: 'fa fa-question-circle',
                    width: '360px',
                    minHeight: '110px',
                    hide: false,
                    closer: false,
                    sticker: false,
                    destroy: true,
                    stack: new PNotify.Stack({
                        dir1: 'down',
                        modal: true,
                        firstpos1: 25,
                        overlayClose: false
                    }),
                    modules: new Map([
                        ...PNotify.defaultModules,
                        [PNotifyConfirm, {
                            confirm: true
                        }]
                    ])
                });

                notice.on('pnotify:confirm', () =>
                    $.ajax({
                        data: { ID: $(this).data('id') },
                        url: '/NhanVien/Delete',
                        dataType: 'Json',
                        type: 'POST',
                        success: function (res) {
                            if (res.status == true) {
                                PNotify.success({
                                    title: 'THÔNG BÁO!!',
                                    text: 'Xóa nhân viên thành công.'
                                });
                                 setTimeout(function () {
                                    window.location.href = "/nhanvien/index";
                                }, 2000);
                            } else {
                                PNotify.error({
                                    title: 'THÔNG BÁO!!',
                                    text: 'Xóa nhân viên KHÔNG thành công.'
                                });
                            }
                        }
                    })

                );
                //notice.on('pnotify:cancel', () => alert('Oh ok. Chicken, I see.'));

            });

            $('.btnEdit').click(function (event) {
                $('.edit').modal('show');
                //alert($(this).data('id'));
                var ID = $(this).data('id');
                $.ajax({
                    url: "/admin/nhanvien/GetByID/" + ID,
                    type: 'GET',
                    dataType: 'json',
                    contentType: "application/json; charset=utf-8",
                    success: function (res) {
                        $('#Sdt').val(res.Sdt);
                        $('#DiaChi').val(res.DiaChi);
                        $('#Email').val(res.Email.trim());
                        $('#TenNV').val(res.TenNV);
                        $('#NgaySinh').val(res.NgaySinh);
                        $('select#GioiTinh').val(res.GioiTinh);
                        $('#MaNV').val(res.MaNV);

                        document.getElementById('NgaySinh').value = '' + res.NgaySinh + '';
                    }
                });
            });

            $('.btnStatus').click(function (event) {
                var ID = $(this).data('id');
                $.ajax({
                    url: "/admin/nhanvien/trangthai/" + ID,
                    type: 'POST',
                    dataType: 'json',
                    contentType: "application/json; charset=utf-8",
                    success: function (res) {
                        if (res.status == true) {
                            PNotify.success({
                                title: 'THÔNG BÁO!!',
                                text: 'Cập nhật trạng thái nhân viên thành công.'
                            });
                            window.location.href = "/admin/nhanvien/index";
                        } else {
                            PNotify.error({
                                title: 'THÔNG BÁO!!',
                                text: 'Cập nhật trạng thái nhân viên KHÔNG thành công.'
                            });
                        }
                    }
                });
            });
        });

    </script>

}


